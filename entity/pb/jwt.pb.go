// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v4.25.3
// source: jwt.proto

package pb

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type JwtInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 主题，一般放关键业务标识字段，如用户ID
	Sub string `protobuf:"bytes,1,opt,name=sub,proto3" json:"sub,omitempty"`
	// 签发者，一般可以放业务标识，如登录，短信验证
	Iss string `protobuf:"bytes,2,opt,name=iss,proto3" json:"iss,omitempty"`
	// 观众，一般代表接收方
	Aud []string `protobuf:"bytes,3,rep,name=aud,proto3" json:"aud,omitempty"`
	// 过期时间戳（秒）
	Exp int64 `protobuf:"varint,4,opt,name=exp,proto3" json:"exp,omitempty"`
	// 不早于某个时间使用，时间戳（秒）
	Nbf int64 `protobuf:"varint,5,opt,name=nbf,proto3" json:"nbf,omitempty"`
	// 签发时间
	Iat int64 `protobuf:"varint,6,opt,name=iat,proto3" json:"iat,omitempty"`
	// jwt token id
	Jti string `protobuf:"bytes,7,opt,name=jti,proto3" json:"jti,omitempty"`
	// 自定义属性，不能包含上述字段
	Attributes map[string]string `protobuf:"bytes,8,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *JwtInfo) Reset() {
	*x = JwtInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jwt_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JwtInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JwtInfo) ProtoMessage() {}

func (x *JwtInfo) ProtoReflect() protoreflect.Message {
	mi := &file_jwt_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JwtInfo.ProtoReflect.Descriptor instead.
func (*JwtInfo) Descriptor() ([]byte, []int) {
	return file_jwt_proto_rawDescGZIP(), []int{0}
}

func (x *JwtInfo) GetSub() string {
	if x != nil {
		return x.Sub
	}
	return ""
}

func (x *JwtInfo) GetIss() string {
	if x != nil {
		return x.Iss
	}
	return ""
}

func (x *JwtInfo) GetAud() []string {
	if x != nil {
		return x.Aud
	}
	return nil
}

func (x *JwtInfo) GetExp() int64 {
	if x != nil {
		return x.Exp
	}
	return 0
}

func (x *JwtInfo) GetNbf() int64 {
	if x != nil {
		return x.Nbf
	}
	return 0
}

func (x *JwtInfo) GetIat() int64 {
	if x != nil {
		return x.Iat
	}
	return 0
}

func (x *JwtInfo) GetJti() string {
	if x != nil {
		return x.Jti
	}
	return ""
}

func (x *JwtInfo) GetAttributes() map[string]string {
	if x != nil {
		return x.Attributes
	}
	return nil
}

// 通常设置sub和exp
type SignReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JwtInfo *JwtInfo `protobuf:"bytes,1,opt,name=jwtInfo,proto3" json:"jwtInfo,omitempty"`
}

func (x *SignReq) Reset() {
	*x = SignReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jwt_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignReq) ProtoMessage() {}

func (x *SignReq) ProtoReflect() protoreflect.Message {
	mi := &file_jwt_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignReq.ProtoReflect.Descriptor instead.
func (*SignReq) Descriptor() ([]byte, []int) {
	return file_jwt_proto_rawDescGZIP(), []int{1}
}

func (x *SignReq) GetJwtInfo() *JwtInfo {
	if x != nil {
		return x.JwtInfo
	}
	return nil
}

type SignResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *SignResp) Reset() {
	*x = SignResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jwt_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignResp) ProtoMessage() {}

func (x *SignResp) ProtoReflect() protoreflect.Message {
	mi := &file_jwt_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignResp.ProtoReflect.Descriptor instead.
func (*SignResp) Descriptor() ([]byte, []int) {
	return file_jwt_proto_rawDescGZIP(), []int{2}
}

func (x *SignResp) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type VerifyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *VerifyReq) Reset() {
	*x = VerifyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jwt_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyReq) ProtoMessage() {}

func (x *VerifyReq) ProtoReflect() protoreflect.Message {
	mi := &file_jwt_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyReq.ProtoReflect.Descriptor instead.
func (*VerifyReq) Descriptor() ([]byte, []int) {
	return file_jwt_proto_rawDescGZIP(), []int{3}
}

func (x *VerifyReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type VerifyResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 不合法，过期等都为false
	Valid   bool     `protobuf:"varint,1,opt,name=valid,proto3" json:"valid,omitempty"`
	JwtInfo *JwtInfo `protobuf:"bytes,2,opt,name=jwtInfo,proto3" json:"jwtInfo,omitempty"`
}

func (x *VerifyResp) Reset() {
	*x = VerifyResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jwt_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyResp) ProtoMessage() {}

func (x *VerifyResp) ProtoReflect() protoreflect.Message {
	mi := &file_jwt_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyResp.ProtoReflect.Descriptor instead.
func (*VerifyResp) Descriptor() ([]byte, []int) {
	return file_jwt_proto_rawDescGZIP(), []int{4}
}

func (x *VerifyResp) GetValid() bool {
	if x != nil {
		return x.Valid
	}
	return false
}

func (x *VerifyResp) GetJwtInfo() *JwtInfo {
	if x != nil {
		return x.JwtInfo
	}
	return nil
}

var File_jwt_proto protoreflect.FileDescriptor

var file_jwt_proto_rawDesc = []byte{
	0x0a, 0x09, 0x6a, 0x77, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x63, 0x6f, 0x6d,
	0x2e, 0x73, 0x65, 0x65, 0x7a, 0x6f, 0x6f, 0x6e, 0x2e, 0x6a, 0x77, 0x74, 0x1a, 0x17, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x90, 0x02, 0x0a, 0x07, 0x4a, 0x77, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x75, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x73, 0x75, 0x62, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x69, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x75, 0x64, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x03, 0x61, 0x75, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x78, 0x70, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x65, 0x78, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x62, 0x66,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6e, 0x62, 0x66, 0x12, 0x10, 0x0a, 0x03, 0x69,
	0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x69, 0x61, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x6a, 0x74, 0x69, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6a, 0x74, 0x69, 0x12,
	0x48, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x08, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x65, 0x65, 0x7a, 0x6f, 0x6f,
	0x6e, 0x2e, 0x6a, 0x77, 0x74, 0x2e, 0x4a, 0x77, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x61,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x1a, 0x3d, 0x0a, 0x0f, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x47, 0x0a, 0x07, 0x53, 0x69, 0x67, 0x6e,
	0x52, 0x65, 0x71, 0x12, 0x3c, 0x0a, 0x07, 0x6a, 0x77, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x65, 0x65, 0x7a, 0x6f,
	0x6f, 0x6e, 0x2e, 0x6a, 0x77, 0x74, 0x2e, 0x4a, 0x77, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x08,
	0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x07, 0x6a, 0x77, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x20, 0x0a, 0x08, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x22, 0x2a, 0x0a, 0x09, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71,
	0x12, 0x1d, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x14, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22,
	0x56, 0x0a, 0x0a, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x12, 0x32, 0x0a, 0x07, 0x6a, 0x77, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x65, 0x65, 0x7a, 0x6f,
	0x6f, 0x6e, 0x2e, 0x6a, 0x77, 0x74, 0x2e, 0x4a, 0x77, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07,
	0x6a, 0x77, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x32, 0x89, 0x01, 0x0a, 0x03, 0x4a, 0x77, 0x74, 0x12,
	0x3d, 0x0a, 0x04, 0x53, 0x69, 0x67, 0x6e, 0x12, 0x18, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x65,
	0x65, 0x7a, 0x6f, 0x6f, 0x6e, 0x2e, 0x6a, 0x77, 0x74, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65,
	0x71, 0x1a, 0x19, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x65, 0x65, 0x7a, 0x6f, 0x6f, 0x6e, 0x2e,
	0x6a, 0x77, 0x74, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x43,
	0x0a, 0x06, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x12, 0x1a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73,
	0x65, 0x65, 0x7a, 0x6f, 0x6f, 0x6e, 0x2e, 0x6a, 0x77, 0x74, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x79, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x65, 0x65, 0x7a, 0x6f,
	0x6f, 0x6e, 0x2e, 0x6a, 0x77, 0x74, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x00, 0x42, 0x47, 0x0a, 0x14, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x65, 0x65, 0x7a, 0x6f,
	0x6f, 0x6e, 0x2e, 0x6a, 0x77, 0x74, 0x2e, 0x73, 0x74, 0x75, 0x62, 0x50, 0x01, 0x5a, 0x2d, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x65, 0x65, 0x7a, 0x6f, 0x6f,
	0x6e, 0x2d, 0x67, 0x6f, 0x2d, 0x73, 0x74, 0x75, 0x62, 0x2f, 0x6a, 0x77, 0x74, 0x2d, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2d, 0x73, 0x74, 0x75, 0x62, 0x3b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_jwt_proto_rawDescOnce sync.Once
	file_jwt_proto_rawDescData = file_jwt_proto_rawDesc
)

func file_jwt_proto_rawDescGZIP() []byte {
	file_jwt_proto_rawDescOnce.Do(func() {
		file_jwt_proto_rawDescData = protoimpl.X.CompressGZIP(file_jwt_proto_rawDescData)
	})
	return file_jwt_proto_rawDescData
}

var file_jwt_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_jwt_proto_goTypes = []any{
	(*JwtInfo)(nil),    // 0: com.seezoon.jwt.JwtInfo
	(*SignReq)(nil),    // 1: com.seezoon.jwt.SignReq
	(*SignResp)(nil),   // 2: com.seezoon.jwt.SignResp
	(*VerifyReq)(nil),  // 3: com.seezoon.jwt.VerifyReq
	(*VerifyResp)(nil), // 4: com.seezoon.jwt.VerifyResp
	nil,                // 5: com.seezoon.jwt.JwtInfo.AttributesEntry
}
var file_jwt_proto_depIdxs = []int32{
	5, // 0: com.seezoon.jwt.JwtInfo.attributes:type_name -> com.seezoon.jwt.JwtInfo.AttributesEntry
	0, // 1: com.seezoon.jwt.SignReq.jwtInfo:type_name -> com.seezoon.jwt.JwtInfo
	0, // 2: com.seezoon.jwt.VerifyResp.jwtInfo:type_name -> com.seezoon.jwt.JwtInfo
	1, // 3: com.seezoon.jwt.Jwt.Sign:input_type -> com.seezoon.jwt.SignReq
	3, // 4: com.seezoon.jwt.Jwt.Verify:input_type -> com.seezoon.jwt.VerifyReq
	2, // 5: com.seezoon.jwt.Jwt.Sign:output_type -> com.seezoon.jwt.SignResp
	4, // 6: com.seezoon.jwt.Jwt.Verify:output_type -> com.seezoon.jwt.VerifyResp
	5, // [5:7] is the sub-list for method output_type
	3, // [3:5] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_jwt_proto_init() }
func file_jwt_proto_init() {
	if File_jwt_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_jwt_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*JwtInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jwt_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*SignReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jwt_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*SignResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jwt_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*VerifyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jwt_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*VerifyResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_jwt_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_jwt_proto_goTypes,
		DependencyIndexes: file_jwt_proto_depIdxs,
		MessageInfos:      file_jwt_proto_msgTypes,
	}.Build()
	File_jwt_proto = out.File
	file_jwt_proto_rawDesc = nil
	file_jwt_proto_goTypes = nil
	file_jwt_proto_depIdxs = nil
}
